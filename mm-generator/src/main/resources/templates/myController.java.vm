package ${package.Controller};


import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
## ==============================自定义类=============================
import com.run.admin.common.pojo.PageQuery;
import com.run.admin.common.pojo.Result;
import com.run.admin.common.query.BaseQuery;
## ==============================自定义类=============================
import ${package.Entity}.${entity};
import ${package.Service}.${entity}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

import java.util.List;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "$!{table.comment}")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    public ${entity}Service ${controllerMappingHyphen}Service;


    @GetMapping("v1/page")
    @ApiOperation(value = "${table.comment}分页查询", notes = "${table.comment}分页查询")
    public ResponseEntity<Result<List<${entity}>>> page(PageQuery pageQuery, BaseQuery query) {
        IPage<${entity}> iPage = this.${controllerMappingHyphen}Service.page(pageQuery, Wrappers.lambdaQuery(new ${entity}())
                .orderByDesc(${entity}::getUpdateTime));
        return ResponseEntity.ok(Result.success(iPage.getTotal(), iPage.getRecords()));
    }


    @GetMapping("v1/list")
    @ApiOperation(value = "查询所有${table.comment}", notes = "查询所有${table.comment}")
    public ResponseEntity<Result<List<${entity}>>> list() {
        List<${entity}> list = this.${controllerMappingHyphen}Service.list(Wrappers.lambdaQuery(new ${entity}()).orderByDesc(${entity}::getUpdateTime));
        return ResponseEntity.ok(Result.success(list));
    }


    @PostMapping("v1/save")
    @ApiOperation(value = "保存${table.comment}", notes = "保存${table.comment}")
    public ResponseEntity<Result> save(@Validated @RequestBody ${entity} pojo) {
        this.${controllerMappingHyphen}Service.save(pojo);
        return ResponseEntity.ok(Result.success());
    }


    @PatchMapping("v1/update")
    @ApiOperation(value = "根据id修改${table.comment}", notes = "根据id修改${table.comment}")
    public ResponseEntity<Result> update(@Validated @RequestBody ${entity} pojo) {
        this.${controllerMappingHyphen}Service.updateById(pojo);
        return ResponseEntity.ok(Result.success());
    }


    @DeleteMapping("v1/delete/{id}")
    @ApiOperation(value = "根据id删除${table.comment}", notes = "根据id删除${table.comment}")
    public ResponseEntity<Result> delete(@PathVariable("id") Long id) {
        this.${controllerMappingHyphen}Service.removeById(id);
        return ResponseEntity.ok(Result.success());
    }

}
#end
